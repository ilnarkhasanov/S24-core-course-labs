# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

defaults:
  run:
    working-directory: app_python

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v3

    - name: Install Poetry
      run: pipx install poetry

    - name: Set up Python 3.12
      uses: actions/setup-python@v3
      with:
        python-version: "3.12.0"
        cache: "poetry"

    - name: Install dependencies
      run: poetry install

    - name: Lint with flake8
      run: poetry run flake8 --exclude=.venv
      
    - name: Test with pytest
      run: poetry run pytest --cov --cov-fail-under=90

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/python@4a528b5c534bb771b6e3772656a8e0e9dc902f8b
        with:
          args: app_python
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  push:
    needs: [build, security]
    runs-on: ubuntu-latest

    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: app_python
          file: app_python/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/devops_lab_2:latest
